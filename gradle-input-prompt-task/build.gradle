/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.5.1/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:27.1-jre'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}

archivesBaseName  = 'java-api'
version = '1.0'

class PublishToArtifactoryTask extends DefaultTask {
	@Input
	String username
	@Input
	String password
	String artifactory	
	String buildDir
	
	PublishToArtifactoryTask() {
		setUsername("default")
		setPassword("default")
	}
	@TaskAction
	void build() {		
		if (username == "default") {
			BufferedReader br = new BufferedReader(new InputStreamReader(System.in))
			println "> Enter the username:"
			username = br.readLine()
		}
		if (password == "default") {
			BufferedReader br = new BufferedReader(new InputStreamReader(System.in))
			println "> Enter the password:"
			password = br.readLine()
		}
		println "Username is $username and the password is $password"
		File customFolder = new File(buildDir)
		if (customFolder.exists()) {
			// TODO: Upload the jar to the artifactory
			println "Folder exists and carrying out the operations"			
		} else {
			println "No jar present in $buildDir for deployment"
		}
	}
	
	@Option(option = 'username', description = 'Username/email account having permission to publish to artifactory')
	void setUsername(final String username) {
		this.username = username
	}
	
	@Option(option = 'password', description = 'Password of the given username/email')
	void setPassword(final String password) {
		this.password = password
	}
	
}

 
task publishToArtifactory(type: PublishToArtifactoryTask) {
	group 'Custom'			
	description 'Publishes the jar to the artifactory'		
	artifactory = 'http://localhost/artifactory/repo'	
	buildDir = 'build/libs'
	
	doFirst() {			
		
	}
}